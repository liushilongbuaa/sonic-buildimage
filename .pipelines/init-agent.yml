steps:
  - script: |
      set -ex

      # Install Azcopy
      if [ -z "$(which azcopy)" ]; then
        azcopy_url=https://aka.ms/downloadazcopy-v10-linux
        if [[ $PLATFORM_ARCH == arm* ]]; then
          wget -O- "https://sonicstorageinternal.blob.core.windows.net/images/tools/azcopy_18.04_arm64.tar.gz$StorageSASKey" | tar -zxf -
        else
          wget -O- "https://aka.ms/downloadazcopy-v10-linux" | tar -zxf - --strip-components=1 
        fi
        sudo mv -f azcopy /usr/local/bin/
        azcopy  --version
      fi

      if [[ $PLATFORM_ARCH != arm* ]];then
        sudo pip3 install jinja2==3.0.0
        echo "Skipped, platform arch = $PLATFORM_ARCH"
        exit 0
      fi
      
      if [ -n "$(which docker)" ]; then
        echo "Skipped, docker installed"
        exit 0
      fi
      
      if ! mountpoint /data;then
        sudo mkdir -p /data
        disk=$(realpath /dev/disk/azure/scsi1/lun0)
        sudo sgdisk -n 0:0:0 -t 0:8300 -c 0:data $disk || true
        sudo mkfs.ext4 -F ${disk}1 || true
        sudo mount ${disk}1 /data
      fi

      arch=$PLATFORM_ARCH 
      sudo dpkg --add-architecture $arch

      sudo apt-get update
      sleep 1
      sudo apt-get install -y  apt-transport-https ca-certificates curl gnupg-agent software-properties-common nfs-common unzip wget
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository \
       "deb [arch=$arch] https://download.docker.com/linux/ubuntu \
       $(lsb_release -cs) \
       stable"
      
      sudo apt-get update && sudo apt-get install -y docker-ce docker-ce-cli containerd.io
      if [ "$arch" == "armhf" ]; then
        sudo mkdir -p /etc/systemd/system/docker.service.d
        echo '[Service]' | sudo tee /etc/systemd/system/docker.service.d/override.conf
        echo 'ExecStart=' | sudo tee -a /etc/systemd/system/docker.service.d/override.conf
        echo 'ExecStart=/usr/bin/setarch linux32 -B /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --data-root /data/docker' | sudo tee -a /etc/systemd/system/docker.service.d/override.conf
      
        sudo mkdir -p /etc/systemd/system/containerd.service.d
        echo '[Service]' | sudo tee /etc/systemd/system/containerd.service.d/override.conf
        echo 'ExecStart=' | sudo tee -a /etc/systemd/system/containerd.service.d/override.conf
        echo 'ExecStart=/usr/bin/setarch linux32 -B /usr/bin/containerd' | sudo tee -a /etc/systemd/system/containerd.service.d/override.conf
      
        sudo sed -i 's#ExecStart=/usr/bin/dockerd#ExecStart=/usr/bin/setarch linux32 -B /usr/bin/dockerd#' /lib/systemd/system/docker.service
        sudo systemctl daemon-reload
        sudo service docker restart
        sudo service containerd restart
      fi

      # Change docker permission group
      sudo mkdir -p /etc/docker
      echo "{\"group\": \"$(id -gn)\"}" | sudo tee /etc/docker/daemon.json
      sudo chown root:$(id -gn) /var/run/docker.sock
      sudo systemctl restart docker
      
      sudo apt-get install -y make acl
      sudo apt-get install -y python3-pip
      sudo pip3 install --force-reinstall --upgrade jinja2==3.0.0
      sudo pip3 install j2cli==0.3.10
      
      curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
      sudo apt-get install -y git-lfs
      sudo usermod -a -G docker $USER
      sudo mkdir -p /etc/docker
      echo "{\"group\": \"$(id -gn)\"}" | sudo tee /etc/docker/daemon.json

      # Change docker data root
      sudo systemctl stop docker
      sudo sed -i 's/^ExecStart=.*$/& --data-root \/data\/docker/' /lib/systemd/system/docker.service
      sudo systemctl daemon-reload
      sudo systemctl start docker
      docker info

      # Make symbolic link for the source path to increase the space
      sudo rm -rf $(Agent.BuildDirectory)/s /data/s
      sudo mkdir /data/s
      sudo chown $USER:$(id -gn) /data/s
      ln -s /data/s $(Agent.BuildDirectory)/s
      echo "pwd=$(pwd)"
      ls -lt $(Agent.BuildDirectory)
      ls -lt

      # Mount nfs
      sudo mkdir /nfs
      sudo mount -t nfs -o sec=sys,vers=4.1 172.16.131.132:/vol1 /nfs
      sudo chown nobody /nfs
      sudo chmod u=rwx,g=rwx,o=r /nfs
      df -h
    env:
      StorageSASKey: $(SONIC_STORAGE_SASKEY)
    displayName: 'Init agent'
