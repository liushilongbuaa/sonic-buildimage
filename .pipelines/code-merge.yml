pr: none
trigger: none

schedules:
- cron: "0 0 * * *"
  displayName: Daily
  branches:
    include:
    - internal
  always: true

parameters:
- name: branches
  type: object
  default:
  - master
  - 201811
  - 202012
  - 202106
  - 202111

pool:
  vmImage: 'windows-latest'
variables:
- group: SONIC-BUILD-VG-1

steps:
  - checkout: self
    clean: true
    persistCredentials: true
  - powershell: cp .\.pipelines\MsVstsUtils.ps1 $(Build.ArtifactStagingDirectory)
    displayName: 'Copy utils script'
  - ${{each branch in parameters.branches}}:
    - powershell: |
        git remote add source https://github.com/Azure/sonic-buildimage
        git remote add source-ms https://github.com/Azure/sonic-buildimage-msft
        git remote update; if (-not $?) { exit 1 }
        git config --global user.email "svc-acs@microsoft.com"
        git config --global user.name "Sonic Automation"

        git reset --hard
        git clean -xdff
        $base_branch="internal-${{branch}}"
        $source_branch="${{branch}}"
        $remote_repo="source"
        if ( ${base_branch} -eq "internal-master" ) {
          $base_branch="internal"
        }
        $sp_branch=${env:MS_BRANCHES}.split(',')
        foreach ($branch in $sp_branch){
          if ( "${source_branch}" -eq "$branch" ){
            $remote_repo="source-ms"
          }
        }
        git ls-remote origin refs/heads/${base_branch}; if (-not $?) { Write-Error "Base branch not found" ;exit 1 }
        git ls-remote $remote_repo refs/heads/${source_branch}; if (-not $?) { Write-Error "Target branch not found" ;exit 1 }

        git checkout -b ${base_branch} --track origin/${base_branch}
        $curr_tag="${base_branch}-"+$(Get-Date -format "yyyyMMdd-HHmm")+".pre-merge"
        $post_tag="${base_branch}-"+$(Get-Date -format "yyyyMMdd-HHmm")+".post-merge"
        git tag ${curr_tag}

        Write-Host "========Merging from $remote_repo $source_branch========"
        git pull $remote_repo ${source_branch} --no-edit; if (-not $?) { git merge --abort; exit 1 }
        $head_tag=git tag --contains HEAD

        if ($head_tag -contains $curr_tag) {
          Write-Host "======No change after rebasing ...======"
          exit 0
        } else {
          git tag ${post_tag}; if (-not $?) { exit 1 }
        }
        # push code
        git push --set-upstream origin HEAD:sonicbld/code-sync/${base_branch} -f; if (-not $?) { exit 1 }
        # send PR
        . $(Build.ArtifactStagingDirectory)\MsVstsUtils.ps1
        $PRID=Create-MergePullRequest "sonicbld/code-sync/${base_branch}" "${base_branch}" "Code sync from github"
        Write-Host ========$PRID=======
        az repos pr set-vote --id "$PRID" --vote approve --organization https://msazure.visualstudio.com/
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        AZURE_DEVOPS_EXT_PAT: $(SONIC_PR_APPROVE_TOKEN)
      condition: always()
      displayName: '${{branch}} code merge'
  - powershell: Write-Host finished.
    condition: succeeded()
    displayName: 'Success Flag'
